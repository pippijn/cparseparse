module ListA =
  struct type t = | list = Cons of Integer * List | Nil and Integer = int;;
  end;;
module ListB =
  struct type t = | list = Cons of Integer * List | Nil and Integer = int;;
  end;;
class double =
  object ((self : 'a))
    method list =
      function
      | (ListA.Cons (x, xs)) -> (ListB.Cons (x, (ListB.Cons (x, xs))))
  end;;
class reverse_args =
  object ((self : 'a))
    method list = function | (ListA.Cons (x, xs)) -> (ListB.Cons (xs, x))
  end;;
class rename_tag =
  object ((self : 'a))
    method list = function | (ListA.Cons (x, xs)) -> (ListB.ConsRev (xs, x))
  end;;
